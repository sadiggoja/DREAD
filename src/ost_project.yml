version: "3.6" 
services:

#kafka
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeepfares
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - murat_network
      - murat_db
      - kafka_network

  kafka1:
    image: bitnami/kafka:3.3.1
    container_name: kafkafares
    ports:
      - '9093:9093'
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    networks:
      - murat_network
      - murat_db
      - kafka_network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdropfares
    ports:
      - 9000:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka1:9092
    depends_on:
      - kafka1
    networks:
      - murat_network
      - murat_db
      - kafka_network


#database
  influxdb:
    image: influxdb:latest
    container_name: influxdbfares
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    depends_on:
      - zookeeper
      - kafka1
    environment:
      DOCKER_INFLUXDB_INIT_USERNAME: ritha
      DOCKER_INFLUXDB_INIT_PASSWORD: faresjbara
      DOCKER_INFLUXDB_INIT_ORG: chebba
      DOCKER_INFLUXDB_INIT_BUCKET: system_state
    networks:
      - murat_network
      - murat_db
      - kafka_network
    volumes:
      - /home/jbara/Desktop/project/influx_data:/var/lib/influxdb

  telegraf:
    image: telegraf:latest
    container_name: telegraffares
    depends_on:
      - zookeeper
      - influxdb
      - kafka1
    restart: unless-stopped
    networks:
      - murat_network
      - murat_db
      - kafka_network
    volumes:
      - /home/jbara/Desktop/project/telegraf_influx.conf:/etc/telegraf/telegraf.conf:ro
      
  mongo:
    image: mongo
    #restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - '27016:27017'
    networks:
      - murat_network
      - murat_db
      - kafka_network
    depends_on:
      - zookeeper
      - kafka1

  mongo-express:
    image: mongo-express
    #restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - murat_network
      - murat_db 


#vizualisation
  grafana:
    image: grafana/grafana
    container_name: grafanafares
    #restart: always
    depends_on:
      - influxdb
      - telegraf
    environment:
      - GF_SECURITY_ADMIN_USER=najib
      - GF_SECURITY_ADMIN_PASSWORD=faiza
      - GF_INSTALL_PLUGINS=
    networks:
      - murat_network
      - murat_db
      - kafka_network
    ports:
      - '3000:3000'
    volumes:
      - /home/jbara/Desktop/project/grafana_data:/var/lib/grafana
      
  chronograf:
    image: chronograf:latest
    hostname: chronograf
    container_name: chronograffarid
    ports:
      - 7070:7070
    links:
      - influxdb
      - telegraf
    depends_on:
      - influxdb
      - telegraf
    volumes:
      - /home/jbara/Desktop/project/chrono:/var/lib/chronograf
    environment:
      - PORT=7070
    networks:
      - murat_network
      - murat_db
      - kafka_network


#spark


  spark-master:
    image: bitnami/spark:latest
    container_name:  sparkfarid2
    ports:
      - '8080:8080'
      - '7077:7077'
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - murat_network
      - murat_db
      - kafka_network

     

      
      
networks:
  murat_db:
    driver: bridge

  kafka_network:
    driver: bridge

  murat_network:
    driver: bridge